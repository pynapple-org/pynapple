# .github/workflows/build.yaml
name: pynapple CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, dev ]
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          echo "testing: ${{github.ref}}"
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Lint
        run: |
          black --check pynapple
          isort --check pynapple --profile black
          flake8 pynapple --max-complexity 10
          black --check tests
          isort --check tests --profile black
  test:
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        # exclude:
        #   - os: macos-latest
        #     python-version: 3.7
        #   - os: windows-latest
        #     python-version: 3.7
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Test
        run: |
          coverage run --source=pynapple --branch -m pytest tests/
          coverage report -m

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
            token: ${{ secrets.CODECOV_TOKEN }}

  documentation:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev,doc]
      - name: Build documentation
        run: |          
          cd doc
          make html
      - name: Start tmate session for debugging
        if: failure()
        uses: mxschmitt/action-tmate@v3
      - name: Check html
        uses: chabad360/htmlproofer@master
        with:
          directory: "doc/_build/html"
          # The directory to scan
          arguments: --checks Links,Scripts --ignore-urls "https://fonts.gstatic.com,https://mkdocs-gallery.github.io,./doc/_build/html/_static/,https://www.nature.com/articles/s41593-022-01020-w" --assume-extension --check-external-hash --ignore-status-codes 403 --ignore-files "/.+\/html\/_static\/.+/"
          # The arguments to pass to HTMLProofer

  check:
    if: always()
    needs:
    - lint
    - test
    - documentation
    runs-on: ubuntu-latest
    steps:
    - name: Decide whether all tests and notebooks succeeded
      uses: re-actors/alls-green@afee1c1eac2a506084c274e9c02c8e0687b48d9e # v1.2.2
      with:
        jobs: ${{ toJSON(needs) }}
